# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Auth
POST    /api/security/login                  controllers.AuthenticateController.authenticate(request: Request)
POST    /api/security/logout                 controllers.AuthenticateController.logout

#Telegram (Routes include the
POST    /api/telegram/:token/receiveUpdate  controllers.TelegramController.receiveUpdate(token: String, request: Request)

# users resource
POST    /api/users                           controllers.UsersController.create(request: Request)

#users (for admins)
GET     /api/users                          controllers.UsersController.list(name: java.util.Optional[String])
GET     /api/users/:userId                    controllers.UsersController.user(userId: String)
GET     /api/users/:userId/lists/count        controllers.UsersController.listsCount(userId: String)
GET     /api/users/:userId/venues/count       controllers.UsersController.venuesCount(userId: String, visited: java.util.Optional[java.lang.Boolean])
GET     /api/users/:userId/lastAccess         controllers.UsersController.lastAccess(userId: String)

# venues resource
GET     /api/venues                         controllers.VenuesController.search(request: Request)
GET     /api/venues/:id/userCount           controllers.VenuesController.usersInterested(id: String)
GET     /api/venues/count                   controllers.VenuesController.venuesAddedSince(since ?= null)

# list resource
GET     /api/lists                          controllers.ListsController.list(request: Request)
POST    /api/lists                          controllers.ListsController.create(request: Request)
DELETE  /api/lists/:listId                  controllers.ListsController.delete(listId: String, request: Request)

# cambiar nombre de lista
PATCH   /api/lists/:listId                  controllers.ListsController.changeListName(listId: String, request: Request)

# agregar/sacar venue a lista
POST    /api/lists/:listId/venues           controllers.ListsController.addVenuesToList(listId: String, request: Request)
DELETE  /api/lists/:listId/venues           controllers.ListsController.removeVenueFromList(listId: String, request: Request)

# Marcar lugar como visitado
# podría ser algo como: PATCH /api/user/venues
PATCH /api/lists/:listId/venues/:venueId    controllers.ListsController.visitVenue(listId: String, venueId: String, request: Request)

# por query str deberían venir: user1, list1, user2, list2
GET /api/lists/common-venues                controllers.ListsController.compareUsersLists(request: Request)