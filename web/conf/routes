# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Serve index page from public directory
GET     /                           controllers.FrontendController.index()

# An example route (Prefix all API routes with apiPrefix defined in application.conf)
GET     /api/summary                controllers.HomeController.appSummary

#Auth
POST    /api/security/login                  controllers.AuthenticateController.authenticate(request: Request)
POST    /api/security/logout                 controllers.AuthenticateController.logout()


# users resource
POST    /api/users                      controllers.UsersController.create(request: Request)

#users (for admins)
GET     /api/users                      controllers.UsersController.list
GET     /api/users/:user                controllers.UsersController.user(user: models.User)
GET     /api/users/:user/lists/count    controllers.UsersController.listsCount(user: models.User)
GET     /api/users/:user/places/count   controllers.UsersController.placesCount(user: models.User, visited: java.util.Optional[java.lang.Boolean])
GET     /api/users/:user/lastAccess     controllers.UsersController.lastAccess(user: models.User)

# venues resource
GET     /api/venues                     controllers.VenuesController.search(request: Request)
GET     /api/venues/:id/userCount       controllers.VenuesController.usersInterested(id: Long)
GET     /api/venues/count               controllers.VenuesController.venuesAddedSince(since ?= null)

# list resource
GET     /api/lists                      controllers.ListsController.list()
POST    /api/lists                      controllers.ListsController.create(request: Request)
DELETE  /api/lists/:listId              controllers.ListsController.delete(listId: Long)

# todo:
# agregar lugar en lista
# POST    /api/lists/:listId/places      controllers.ListsController.addPlaceToList(listId: String, request: Request)

# sacar lugar de lista
# DELETE  /api/lists/:listId/places      controllers.ListsController.removePlaceFromList(listId: String, request: Request)

# cambiar nombre en lista
# PATCH /api/lists/:listId                  controllers.ListsController.changeListName(venueId: String, request: Request)

# Marcar lugar como visitado
# POST /api/lists/:listId/places/{placeId}/mark controllers.ListsController.visitPlace?
# o PATCH /api/users/:id/places porque los lugares son del usuario y las listas los comparten


# todo: ver si listid1 y 2 pueden hacerse path bindables, para que de 1 tengas las listas
GET     /api/lists/comparison/:listId1/:listId2     controllers.ListsController.compareLists(listId1: Long, listId2: Long)

# Serve static assets under public directory
GET     /*file                      controllers.FrontendController.assetOrDefault(file)
